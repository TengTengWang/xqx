subprojects{
	ext {
		springBootVersion = '2.0.1.RELEASE'
		springModulVersion = '1.4.5.RELEASE'
		springframeworkVersion = '5.0.5.RELEASE'
		apolloClientVersion = '1.0.0'
	}
	buildscript {
		
		repositories {
			mavenCentral()
	   		jcenter()
	        maven { url 'http://repo.spring.io/snapshot' }
	        maven { url 'http://repo.spring.io/libs-snapshot' }
	        maven { url 'http://repo.spring.io/milestone' }
		}
		dependencies {
			classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		}
	}
	
	apply plugin: 'java'
	apply plugin: 'eclipse'
	
	group = 'com.xqx'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	
	[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
	
	repositories {
		mavenLocal()
		mavenCentral()
   		jcenter()
        maven { url 'http://repo.spring.io/snapshot' }
        maven { url 'http://repo.spring.io/libs-snapshot' }
        maven { url 'http://repo.spring.io/milestone' }
	}
	
	
	dependencies {
		compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
		testCompile group: 'junit', name: 'junit', version: '4.12'
		ext.jarTree = fileTree(dir: 'libs', include: '**/*.jar')
        ext.rootProjectLibs = new File(rootProject.rootDir, 'libs').getAbsolutePath()
        ext.jarTree += fileTree(dir: rootProjectLibs, include: '**/*.jar')
        compile jarTree
	}
}
